#Instalando Pacman y llamando otros paquetes.
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven)
library(pacman)
#Instalando Pacman y llamando otros paquetes.
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven)
#cargando la base de datos
load(url("https://github.com/Kevin-carrasco/metod1-MCS/raw/main/files/data/external_data/latinobarometro2020.RData"))
proc_data <- latinobarometro2020 %>% select(p13st_e, p13st_d, p13st_f, p13st_g,
reeduc_1, sexo, edad, idenpa)
proc_data <- proc_data %>%
dplyr::filter(idenpa==152)
#Procesamiento de variables
proc_data <- proc_data %>% set_na(., na = c(-2, -1))
proc_data$p13st_e <- recode(proc_data$p13st_e, "1=3; 2=2; 3=1; 4=0")
proc_data$p13st_d <- recode(proc_data$p13st_d, "1=3; 2=2; 3=1; 4=0")
proc_data$p13st_f <- recode(proc_data$p13st_f, "1=3; 2=2; 3=1; 4=0")
proc_data$p13st_g <- recode(proc_data$p13st_g, "1=3; 2=2; 3=1; 4=0")
proc_data <- proc_data %>% rename("conf_gob"=p13st_e, # Confianza en el gobierno
"conf_cong"=p13st_d, # Confianza en el congreso
"conf_jud"=p13st_f, # Confianza en el Poder Judicial
"conf_partpol"=p13st_g) # Confianza en los partidos políticos
proc_data$conf_gob <- set_label(x = proc_data$conf_gob,label = "Confianza: Gobierno")
get_label(proc_data$conf_gob)
##Descriptivo
frq(proc_data$p13st_e)
proc_data$conf_cong  <- set_label(x = proc_data$conf_cong, label = "Confianza: Congreso")
proc_data$conf_jud  <- set_label(x = proc_data$conf_jud, label = "Confianza: Poder judicial")
proc_data$conf_partpol  <- set_label(x = proc_data$conf_partpol, label = "Confianza: Partidos politicos")
proc_data$conf_inst <- (proc_data$conf_gob+proc_data$conf_cong+proc_data$conf_jud+proc_data$conf_partpol)
summary(proc_data$conf_inst)
get_label(proc_data$conf_inst)
proc_data$conf_inst  <- set_label(x = proc_data$conf_inst, label = "Confianza en instituciones")
frq(proc_data$conf_gob)
proc_data$conf_gob <- set_labels(proc_data$conf_gob,
labels=c( "Ninguna"=0,
"Poca"=1,
"Algo"=2,
"Mucha"=3))
proc_data$conf_cong <- set_labels(proc_data$conf_cong,
labels=c( "Ninguna"=0,
"Poca"=1,
"Algo"=2,
"Mucha"=3))
proc_data$conf_jud <- set_labels(proc_data$conf_jud,
labels=c( "Ninguna"=0,
"Poca"=1,
"Algo"=2,
"Mucha"=3))
proc_data$conf_partpol <- set_labels(proc_data$conf_partpol,
labels=c( "Ninguna"=0,
"Poca"=1,
"Algo"=2,
"Mucha"=3))
frq(proc_data$conf_gob)
frq(proc_data$reeduc_1)
# recodificacion usando funcion 'recode' de la libreria car
proc_data$reeduc_1 <- car::recode(proc_data$reeduc_1, "c(1,2,3)=1; c(4,5)=2; c(6,7)=3")
proc_data$reeduc_1 <- factor(proc_data$reeduc_1,
labels = c("Educacion basica", "Educacion media", "Educacion superior"),
levels = c(1, 2, 3))
frq(proc_data$reeduc_1)
proc_data <- rename(proc_data,"educacion"=reeduc_1)
proc_data$educacion <- set_label(x = proc_data$educacion,label = "Educación")
#Variable Sexo
proc_data$sexo <- car::recode(proc_data$sexo, "1=0;2=1")
proc_data$sexo <- factor(proc_data$sexo,
labels=c("Hombre","Mujer"),
levels=c(0,1))
proc_data$sexo <- set_label(x = proc_data$sexo, label="Sexo")
frq(proc_data$sexo)
#Variable Edad
proc_data$edad <- set_label(x = proc_data$edad, label = "Edad")
get_label(proc_data$edad)
#Generacion de base de datos proesada para el analisis
proc_data <- as.data.frame(proc_data)
stargazer(proc_data, type = "text")
save(proc_data, file = "C:\Users\Alumno\Documents\GitHub\Clase3\ipo\input\data-proc")
save(proc_data, file = "C:/Users/Alumno/Documents/GitHub/Clase3/ipo/input/data-proc")
save(proc_data, file = "Users/Alumno/Documents/GitHub/Clase3/ipo/input/data-proc")
save(proc_data, file = "Users/Alumno/Documents/GitHub/Clase3/ipo/input")
save(proc_data, file = "C:\Users\Alumno\Documents\GitHub\Clase3\ipo\input\data-proc")
save(proc_data, file = "C:\\Users\\Alumno\\Documents\\GitHub\\Clase3\\ipo\\input\\proc")
save(proc_data, file = "C:\\Users\\Alumno\\Documents\\GitHub\\Clase3\\ipo\\input\\data-proc")
save(proc_data, file = "C:\\Users\\Alumno\\Documents\\GitHub\\Clase3\\ipo\\input")
save(proc_data, file = "C:\\Users\\Alumno\\Documents\\GitHub\\Clase3\\ipo\\input")
save(proc_data, file = "C:\\Users\\Alumno\\Documents\\GitHub\\Clase3\\ipo\\input\\proc")
save(proc_data, file = "C:\\Users\\Alumno\\Documents\\GitHub\\Clase3\\ipo\\input\\latinobarometro_proc.RData")
save(proc_data, file = "C:\Users\Alumno\Documents\GitHub\Clase3\ipo\input\latinobarometro_proc.RData")
save(proc_data, file = "ipo\input\latinobarometro_proc.RData")
save(proc_data, file = "ipo/input/latinobarometro_proc.RData")
save(proc_data, file = "ipo/input/datos-proc/latinobarometro_proc.RData")
save(proc_data, file = "ipo/input/datos_proc/latinobarometro_proc.RData")
save(proc_data, file = "ipo/input/data-proc/latinobarometro_proc.RData")
#Cargando los paquetes
pacman::p_load(sjlabelled,
dplyr, #Manipulacion de datos
stargazer, #Tablas
sjmisc, # Tablas
summarytools, # Tablas
kableExtra, #Tablas
sjPlot, #Tablas y gráficos
corrplot, # Correlaciones
sessioninfo, # Información de la sesión de trabajo
ggplot2) # Para la mayoría de los gráficos
#Cargar la base de datos a utilizar
load(url("https://github.com/Kevin-carrasco/R-data-analisis/raw/main/files/data/latinobarometro_total.RData"))
rm(list=ls())
options(scipen=999)
#Cargar la base de datos a utilizar
load(url("https://github.com/Kevin-carrasco/R-data-analisis/raw/main/files/data/latinobarometro_total.RData"))
#Exploración inicial de la base de datos
names(proc_data)
dim(proc_data) #Dimensiones de la base de datos
stargazer(proc_data, type = "text")
sjmisc::descr(proc_data,
show = c("label", "range", "mean", "sd", "NA.prc", "n") %>%
kable(., "markdown"))
sjmisc::descr(proc_data,
show = c("label", "range", "mean", "sd", "NA.prc", "n") %>%
kable(.,"markdown"))
sjmisc::descr(proc_data,
show = c("label","range", "mean", "sd", "NA.prc", "n"))%>%
kable(.,"markdown")
sjmisc::descr(proc_data,
show = c("label", "range", "mean", "sd", "NA.prc", "n")) %>%
kable(.,"markdown")
summarytools::dfSummary(proc_data, plain.ascii = FALSE)
view(dfSummary(proc_data, headings = FALSE))
proc_data_original <- proc_data
dim(proc_data)
sum(is.na(proc_data))
proc_data <- na.omit(proc_data) #Eliminar los casos perdidos
dim(proc_data) #Se cuenta el número de casos
proc_data <- sjlabelled::copy_labels(proc_data, proc_data_original)
get_label(proc_data$conf_gob)
proc_data %>%
ggplot(aes(x = conf_inst)) + geom_bar()
proc_data %>%
ggplot(aes(x = conf_inst)) + geom_bar(fill = "Pink")
proc_data %>%
ggplot(aes(x = conf_inst)) + geom_bar(fill = "Orange")
proc_data %>%
ggplot(aes(x = conf_inst)) + geom_bar(fill = "Tuorquoise")
proc_data %>%
ggplot(aes(x = conf_inst)) + geom_bar(fill = "Turquoise")
proc_data %>%
ggplot(aes(x = conf_inst)) +
geom_bar(fill = "Turquoise") +
labs(title = "Confianza en instituciones",
x = "Confianza en instituciones",
y = "Frecuencia")
proc_data %>%
ggplot(aes(x = conf_inst)) +
geom_bar(fill = "Turquoise") +
labs(title = "Confianza en instituciones",
x = "Confianza en instituciones",
y = "Frecuencia") +
theme_bw()
proc_data %>%
ggplot(aes(x = conf_inst)) +
geom_bar(fill = "Turquoise") +
labs(title = "Confianza en instituciones",
x = "Confianza en instituciones",
y = "Frecuencia")
proc_data %>%
ggplot(aes(x = conf_inst)) +
geom_bar(fill = "Turquoise") +
labs(title = "Confianza en instituciones",
x = "Confianza en instituciones",
y = "Frecuencia") +
theme_bw()
graph1 <- proc_data %>%
ggplot(aes(x = conf_inst)) +
geom_bar(fill = "Turquoise") +
labs(title = "Confianza en instituciones",
x = "Confianza en instituciones",
y = "Frecuencia") +
theme_bw()
ggsave(graph1, file = "ipo/output/graph1.png")
sjPlot::sjt.xtab(proc_data$educacion, proc_data$sexo)
sjPlot::sjt.xtab(proc_data$educacion, proc_data$sexo,
show.col.prc = TRUE,
show.summary = FALSE,
encoding = "UTF-8")
tapply(proc_data$conf_inst, proc_data$educacion, mean)
proc_data %>% #se especifica la base de datos
select(conf_inst,educación) %>% #selección de variables
dplyr::group_by(Educación=sjlabelled::as_label(educacion)) %>% #se agrupan por la variable categórica y se usan sus etiquetas con as_label()
dplyr::summarise(Obs.=n(), Promedio=mean(conf_inst), SD=sd(conf_inst)) %>% #Se agregan las operaciones a presentar en la tabla
kable(, format = "markdown") #Se genera la tabla
proc_data %>% # se especifica la base de datos
select(conf_inst,educacion) %>% # se seleccionan las variables
dplyr::group_by(Educación=sjlabelled::as_label(educacion)) %>% # se agrupan por la variable categórica y se usan sus etiquetas con as_label
dplyr::summarise(Obs.=n(),Promedio=mean(conf_inst),SD=sd(conf_inst)) %>% # se agregan las operaciones a presentar en la tabla
kable(, format = "markdown") # se genera la tabla
proc_data %>% #se especifica la base de datos
select(conf_inst,educacion) %>% #selección de variables
dplyr::group_by(Educación=sjlabelled::as_label(educacion)) %>% #se agrupan por la variable categórica y se usan sus etiquetas con as_label()
dplyr::summarise(Obs.=n(), Promedio=mean(conf_inst), SD=sd(conf_inst)) %>% #Se agregan las operaciones a presentar en la tabla
kable(, format = "markdown") #Se genera la tabla
graph <- ggplot(proc_data, aes(x = educacion, y = conf_inst)) +
geom_boxplot() +
labs(x = "Educación", y = "Confianza en instituciones") +
theme_minimal()
graph
ggsave(graph, file = "ipo/output/graph.png")
datos <- proc_data %>%
group_by(educacion) %>%
summarise(promedio = mean(conf_inst))
ggplot(datos, aes(x = educacion, y = promedio)) +
geom_point() +
labs(x = "Educación", y = "Confianza en instituciones") +
theme_minimal() +
ylim(0, 12)
proc_data$idenpa <- factor(proc_data$idenpa,
labels=c("Argentina",
"Bolivia",
"Brasil",
"Chile",
"Colombia",
"Costa Rica",
"Cuba",
"República Dominicana",
"Ecuador",
"El Salvador",
"Guatemala",
"Honduras",
"México",
"Nicaragua",
"Panamá",
"Paraguay",
"Uruguay",
"Venezuela"),
levels=c("32",
"68",
"76",
"152",
"170",
"188",
"214",
"218",
"222",
"320",
"340",
"484",
"558",
"591",
"600",
"604",
"858",
"862"))
proc_data$idenpa
graph_box <- ggplot(proc_data, aes(x = idenpa, y = conf_inst)) +
geom_boxplot() +
labs(x = "País", y = "Confianza en instituciones") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) #Esta parte del código rota las etiquetas del eje x
graph_box
ggsave(graph_box, file = "ipo/output/graph_box.png")
#Para variables univariadas tipo escala Likert
graph2 <- sjPlot::plot_stackfrq(dplyr::select(proc_data, conf_gob,
conf_cong,
conf_jud,
conf_partpol),
title = "Confianza en instituciones políticas") +
theme(legend.position="bottom")
graph2
ggsave(graph2, file="ipo/output/graph2.png")
graph3 <- proc_data %>%
ggplot(aes(x = conf_inst, fill = sexo)) +
geom_bar() +
xlab("Confianza en instituciones") +
ylab("Cantidad") +
labs(fill = "Sexo") +
scale_fill_discrete(labeles = c('Hombre', 'Mujer'))
graph3 <- proc_data %>%
ggplot(aes(x = conf_inst, fill = sexo)) +
geom_bar() +
xlab("Confianza en instituciones") +
ylab("Cantidad") +
labs(fill = "Sexo") +
scale_fill_discrete(labels = c('Hombre', 'Mujer'))
graph3
ggsave(graph3, file = "ipo/output/graph3.png")
graph4 <- ggplot(proc_data, aes(x = as.numeric(edad))) +
geom_histogram(binwidth=0.6, colour="blue", fill="red") +
theme_bw() +
xlab("Edad") +
ylab("Cantidad")
graph4
ggsave(graph4, file = "ipo/output/graph4.png")
datos <- proc_data %>%
group_by(educacion, sexo) %>%
summarise(promedio = mean(conf_inst))
